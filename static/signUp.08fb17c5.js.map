{"version":3,"sources":["pages/signUp.ts"],"names":[],"mappings":"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","file":"signUp.08fb17c5.js","sourceRoot":"..\\src","sourcesContent":["import Block from \"../framework/block\";\nimport HTTPTransport from \"../framework/http\";\nimport FormValidator from \"../framework/formValidator\";\n\nimport Button from \"../components/button\";\n\nimport '../assets/css/form.scss'\nimport '../assets/css/modal.scss'\n\nconst http = new HTTPTransport();\n\nconst button = new Button({\n  name: \"ButtonSignUp\",\n  blockClass: \"form__wrapper-submit\",\n  props: {\n    type: 'submit',\n    text: 'Зарегистрироваться',\n    classButton: 'form__btn-submit'\n  }\n});\n\nclass SignUp extends Block {\n  private formValidator: FormValidator;\n  constructor({ root }) {\n    super({\n      name: \"signUp\",\n      components: {\n        button\n      },\n      tagName: \"section\",\n      blockClass: \"modal\",\n      root: root\n    });\n\n    this.formValidator = null;\n  }\n  render() {\n    return `\n      <h2 class=\"modal__title\">Регистрация</h2>\n      <form class=\"modal__form  form  needs-validation\" name=\"signup\" method=\"post\">\n        <ul class=\"form__list\">\n          <li class=\"form__field  input\">\n            <input class=\"input__enter\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Почта\">\n            <label class=\"input__label\" for=\"email\">Почта</label>\n          </li>\n          <li class=\"form__field  input\">\n            <input class=\"input__enter\" type=\"text\" id=\"login\" name=\"login\" placeholder=\"Логин\">\n            <label class=\"input__label\" for=\"login\">Логин</label>\n          </li>\n          <li class=\"form__field  input\">\n            <input class=\"input__enter\" type=\"text\" id=\"first_name\" name=\"first_name\" placeholder=\"Имя\">\n            <label class=\"input__label\" for=\"first_name\">Имя</label>\n          </li>\n          <li class=\"form__field  input\">\n            <input class=\"input__enter\" type=\"text\" id=\"second_name\" name=\"second_name\" placeholder=\"Фамилия\">\n            <label class=\"input__label\" for=\"second_name\">Иванов</label>\n          </li>\n          <li class=\"form__field  input\">\n            <input class=\"input__enter\" type=\"text\" id=\"phone\" name=\"phone\" placeholder=\"Телефон\">\n            <label class=\"input__label\" for=\"phone\">Телефон</label>\n          </li>\n          <li class=\"form__field  input\">\n            <input class=\"input__enter\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Пароль\">\n            <label class=\"input__label\" for=\"password\">Пароль</label>\n          </li>\n          <li class=\"form__field  input\">\n            <input class=\"input__enter\" type=\"password\" id=\"password-repeat\" name=\"password_second\" placeholder=\"Пароль (ещё раз)\">\n            <label class=\"input__label\" for=\"password-repeat\">Пароль (ещё раз)</label>\n          </li>\n        </ul>\n        {{button}}\n      </form>\n      <a class=\"modal__link  link\" href=\"#sign_in\">Войти</a>\n    `;\n  }\n  componentMounted() {\n    document.title = \"Sign Up\";\n\n    this.root.nextTick(() => {\n      const form:HTMLFormElement = document.querySelector(\"form[name=signup]\");\n\n      function tryToSignUp() {\n        return http.post(\n          'https://ya-praktikum.tech/api/v2/auth/signin',\n          {\n            body: JSON.stringify({\n              email: \"\",\n              login: \"yaya\",\n              password: \"yaya\",\n              first_name: \"\",\n              second_name: \"\",\n              phone: \"\",\n            }),\n            headers: {\n              accept: 'application/json',\n              'Content-Type': 'application/json',\n            }\n          },\n          4000\n        );\n      }\n\n      function errorHandler(error): void {\n        console.warn('errorHandler', error);\n      }\n\n      function successHandler () {\n        tryToSignUp();\n      }\n\n      if (!form) {\n        errorHandler(\"Form is not found\");\n      } else {\n        this.formValidator = new FormValidator(form, successHandler, errorHandler);\n        this.formValidator.init()\n      }\n    })\n  }\n  componentDestroy(): void {\n    this.formValidator.destroy()\n  }\n}\n\nexport default SignUp\n"]}